
plugins {
    id 'java'
}

group = 'org.uli.nod'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.testng:testng:7.7.0'
    //Cucumber
    implementation 'io.cucumber:cucumber-java:6.9.1'
    implementation 'io.cucumber:cucumber-core:6.9.1'

    //Appium
    implementation 'io.appium:java-client:8.5.0'
    //Guava Google - Optimizacion de codigo
    implementation 'com.google.guava:guava:31.0.1-jre'

    //Peticiones Request
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    //postgresql
    implementation 'org.postgresql:postgresql:42.6.0'

    //Lectura de excel
    implementation 'org.apache.poi:poi:5.2.3'
    implementation 'org.apache.poi:poi-ooxml:5.2.3'

    implementation gradleApi()

}

test {
    useTestNG()
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

tasks.register('incrementBuildValue') {
    doLast {
        def buildNumber = System.getenv('BUILD_NUMBER')
        if (buildNumber != null) {
            ant.propertyfile(file: "src/test/resources/build.properties") {
                entry(key: "build_version", value: "0" + (buildNumber))
                println "El número de construcción es: $buildNumber"
            }
        } else {
            def propsBuild = file("src/test/resources/build.properties").withReader {
                Properties props = new Properties()
                props.load(it)
                project.ext.myProps = props
            }
            def versissionC = Integer.parseInt(propsBuild.getProperty("build_version"))
            /*Actualizacion de la version de la build*/
            ant.propertyfile(file: "src/test/resources/build.properties") {
                entry(key: "build_version", value: "0" + (versissionC + 1))
            }
            println "El número de construcción es: $versissionC"
        }
    }
}

tasks.register('regressionLowTag') {
    dependsOn incrementBuildValue
    dependsOn assemble, compileTestJava
    doFirst {
        ant.propertyfile(file: "src/test/resources/build.properties") {
            entry(key: "name_task", value: name)
        }
    }
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ["--threads", "10", "--plugin", "pretty", "--glue", "app.com", "src/test/java/app/com/usershistory/pocs/POCC.feature"]
        }
    }
}

tasks.register('regressionMiddleTag') {
    dependsOn incrementBuildValue
    dependsOn assemble, compileTestJava
    doFirst {
        ant.propertyfile(file: "src/test/resources/build.properties") {
            entry(key: "name_task", value: name)
        }
    }
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ["--threads", "10", "--plugin", "pretty", "--glue", "app.com", "src/test/java/app/com/usershistory/pocs/POCC2.feature"]
        }
    }
}

tasks.register('regressionHighTag') {
    dependsOn incrementBuildValue
    dependsOn assemble, compileTestJava
    doFirst {
        ant.propertyfile(file: "src/test/resources/build.properties") {
            entry(key: "name_task", value: name)
        }
    }
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ["--threads", "10", "--plugin", "pretty", "--glue", "app.com", "src/test/java/app/com/usershistory/pocs/POCC3.feature"]
        }
    }
}

tasks.register('regressionVeryHighTag') {
    dependsOn incrementBuildValue
    dependsOn assemble, compileTestJava
    doFirst {
        ant.propertyfile(file: "src/test/resources/build.properties") {
            entry(key: "name_task", value: name)
        }
    }
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ["--threads", "10", "--plugin", "pretty", "--glue", "app.com", "src/test/java/app/com/usershistory/pocs/POCC4.feature"]
        }
    }
}